"""added models Project

Revision ID: ccf3b3db52d7
Revises: 0f8414da99b7
Create Date: 2025-09-16 23:48:37.657720

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'ccf3b3db52d7'
down_revision: Union[str, Sequence[str], None] = '0f8414da99b7'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('otps')
    op.drop_constraint(op.f('projects_owner_id_fkey'), 'projects', type_='foreignkey')
    op.drop_column('projects', 'owner_id')
    op.drop_constraint(op.f('users_email_key'), 'users', type_='unique')
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_first_name'), 'users', ['first_name'], unique=False)
    op.create_index(op.f('ix_users_last_name'), 'users', ['last_name'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_last_name'), table_name='users')
    op.drop_index(op.f('ix_users_first_name'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.create_unique_constraint(op.f('users_email_key'), 'users', ['email'], postgresql_nulls_not_distinct=False)
    op.add_column('projects', sa.Column('owner_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.create_foreign_key(op.f('projects_owner_id_fkey'), 'projects', 'users', ['owner_id'], ['id'])
    op.create_table('otps',
    sa.Column('email', sa.VARCHAR(length=320), autoincrement=False, nullable=False),
    sa.Column('code', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text("timezone('Asia/Bishkek'::text, now())"), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text("timezone('Asia/Bishkek'::text, now())"), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('otps_pkey')),
    sa.UniqueConstraint('email', name=op.f('otps_email_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    # ### end Alembic commands ###
